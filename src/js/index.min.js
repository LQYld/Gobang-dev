const WHITE_ENMU=-1;const BLACK_ENMU=1;const NULL_ENMU=0;const line=19;const block=line-1;const boundarySpacing=40;const boundaryOffset=boundarySpacing/2;const min=0;const max=line-1;const boundaryNumMin=-5;const boundaryNumMax=5;const fiveSubarrSwitchType=["-","|","\\","/"];let gamesOver=false;let currentPlayer=1;let ctx=null;let pointPositionArray=new Array(line).fill(0).map(()=>new Array(line).fill(0));let width=null;let height=null;let interval=null;let checkerboardWidth=null;let checkerboardHeight=null;const app=new Vue({el:"#root",data:{currentWinner:"暂无",isGameOver:false},methods:{showWinner(){currentPlayer===1?this.currentWinner="黑子（玩家）":this.currentWinner="白子（电脑）"}}});const canvas=document.getElementById("canvasElement");if(canvas.getContext){ctx=canvas.getContext("2d");checkerboardWidth=ctx.canvas.scrollWidth;checkerboardHeight=ctx.canvas.scrollHeight;width=ctx.canvas.scrollWidth-boundarySpacing;height=ctx.canvas.scrollHeight-boundarySpacing;interval=Number((width/block).toFixed(2))}const FOUR_WAY_POINT=[{row:3,col:3},{row:3,col:9},{row:3,col:15},{row:9,col:3},{row:9,col:9},{row:9,col:15},{row:15,col:3},{row:15,col:9},{row:15,col:15}];canvas.addEventListener("click",playChessClick);canvas.onmousemove=locationMouseover;function initCheckerboard(){let e=boundaryOffset;let t=boundaryOffset;let n=0;let r=0;ctx.fillStyle="#f7d774";ctx.fillRect(0,0,checkerboardWidth,checkerboardHeight);while(n<line){ctx.moveTo(e,t);ctx.lineTo(width+boundaryOffset,t);n++;t+=interval}t=boundaryOffset;while(r<line){ctx.moveTo(e,t);ctx.lineTo(e,height+boundaryOffset);r++;e+=interval}ctx.stroke();paintingFourWayPoint(FOUR_WAY_POINT,2);paintPaintingCurrentArray(pointPositionArray)}function paintingFourWayPoint(e,t){e.forEach(e=>{ctx.beginPath();ctx.arc(e.col*interval+boundaryOffset,e.row*interval+boundaryOffset,t,0,Math.PI*2,true);ctx.moveTo(e.col*interval+boundaryOffset,e.row*interval+boundaryOffset);ctx.fillStyle="#000";ctx.fill();ctx.closePath();ctx.stroke()})}function paintPaintingCurrentArray(e){const r=10;e.forEach((e,n)=>{e.forEach((e,t)=>{if(e===0)return;e===1?ctx.fillStyle="#000":ctx.fillStyle="#fff";ctx.beginPath();ctx.arc(t*interval+boundaryOffset,n*interval+boundaryOffset,r,0,Math.PI*2,true);ctx.moveTo(t*interval+boundaryOffset,n*interval+boundaryOffset);ctx.fill();ctx.closePath();ctx.stroke()})})}function locationMouseover(i){if(gamesOver)return;if(currentPlayer===-1)return;window.requestAnimationFrame(()=>{repaintCanvas();const{offsetX:e,offsetY:t}=i;const n=parseInt((e+boundaryOffset)/interval)-1;const r=parseInt((t+boundaryOffset)/interval)-1;if(n<min||n>max)return;if(r<min||r>max)return;pointPositionArray[r][n]===0?ctx.strokeStyle="#24d86e":ctx.strokeStyle="#ff1920";ctx.lineWidth=2;ctx.strokeRect(n*interval+boundaryOffset-10,r*interval+boundaryOffset-10,20,20);ctx.strokeStyle="#000";ctx.lineWidth=1})}function playChessClick(e){if(gamesOver)return;if(currentPlayer===-1)return;const{offsetX:t,offsetY:n}=e;const r=parseInt((t+boundaryOffset)/interval)-1;const i=parseInt((n+boundaryOffset)/interval)-1;if(pointPositionArray[i][r]!==0)return;pointPositionArray[i][r]=1;repaintCanvas();if(settlement({x:i,y:r}))return gamesOverFunc();currentPlayer=-1;return AiPlayer()}function clearCanvas(){ctx.clearRect(0,0,checkerboardWidth,checkerboardHeight)}function repaintCanvas(){clearCanvas();initCheckerboard()}const settlement=({x:e,y:t})=>judgeFiveSubarr(e,t);function judgeFiveSubarr(n,r){let i=0;while(i<fiveSubarrSwitchType.length){let e=null;e=fiveSubarrSwitch({x:n,y:r,type:fiveSubarrSwitchType[i]});i++;let t=isItContinuous(e);if(t)return true}return false}function isItContinuous(e){let t=0;return e.some(e=>{e?t+=1:t=0;return t<5?false:true})}function fiveSubarrSwitch({x:e,y:t,type:n,player:r=currentPlayer}){let i=[];let o=boundaryNumMin;switch(n){case"|":while(o<=boundaryNumMax){const a=e+o;o++;if(a<min||a>max)continue;i.push(pointPositionArray[a][t]===r?true:pointPositionArray[a][t]===0?0:false)}break;case"-":while(o<=boundaryNumMax){const l=t+o;o++;if(l<min||l>max)continue;i.push(pointPositionArray[e][l]===r?true:pointPositionArray[e][l]===0?0:false)}break;case"\\":while(o<=boundaryNumMax){const a=e+o;const l=t+o;o++;if(a<min||a>max)continue;if(l<min||l>max)continue;i.push(pointPositionArray[a][l]===r?true:pointPositionArray[a][l]===0?0:false)}break;case"/":while(o<=boundaryNumMax){const a=e+o;const l=t-o;o++;if(a<min||a>max)continue;if(l<min||l>max)continue;i.push(pointPositionArray[a][l]===r?true:pointPositionArray[a][l]===0?0:false)}break}return i}function AiPlayer(){if(gamesOver)return;const e=defenseLevel(1);const t=defenseLevel(-1);let n=e;if(t){if(t.level>=4){n=t}else{t.level>e.level?n=t:null}}const{positionX:r,positionY:i}=AIfiveSubarrSwitch({x:n.x,y:n.y,MaxHazardLevel:n});repaintCanvas();if(settlement({x:r,y:i}))return gamesOverFunc();currentPlayer=1}function hazardLevel(n,e){let r=0;let i=[];let o=0;let a=0;let l=[];let c=true;let s=null;let u=[];n.forEach((e,t)=>{if(e){r+=1;o?null:o=t;a=t;if(t===n.length-1){i.push(r);l.push({start:o,end:a});u.push(s);r=0;o=0;a=0;c=true;s=null}}else{if(c&&o!==0&&e===0&&s===null&&t<n.length-1){c=false;s=t;a=t;if(n[t]===true)r+=1}else{i.push(r);l.push({start:o,end:a});u.push(s);r=0;o=0;a=0;c=true;s=null}}});i=i.map((e,t)=>{if(e){if(n[l[t].start-1]===false&&n[l[t].end+1]===false)return 0;if(n[l[t].start-1]===false&&n[l[t].end+1]===undefined)return 0;if(n[l[t].start-1]===undefined&&n[l[t].end+1]===false)return 0;if(n[l[t].start-1]===undefined&&n[l[t].end+1]===undefined)return 0}return e});let t=Math.max.apply(null,i);const f=i.findIndex(e=>e===t);return{type:e,level:t,slotIndex:u[f],index:l[f],arr:n}}function defenseLevel(a=-1){let l=[];pointPositionArray.forEach((e,o)=>{pointPositionArray[o].forEach((e,n)=>{const r=[];if(e===a){let t=0;while(t<fiveSubarrSwitchType.length){let e=null;e=fiveSubarrSwitch({x:o,y:n,type:fiveSubarrSwitchType[t],player:a});r.push(Object.assign(hazardLevel(e,fiveSubarrSwitchType[t]),{x:o,y:n}));t++}const i=r.reduce((e,t)=>e.level>t.level?e:t);l.push(i)}})});return l.length>0?l.reduce((e,t)=>e.level>t.level?e:t):null}function AIfiveSubarrSwitch({x:n,y:r,MaxHazardLevel:e}){let t=boundaryNumMin;let i=0;let o=e.slotIndex===null?e.index.start:e.slotIndex;switch(e.type){case"|":while(t<=boundaryNumMax){const a=n+t;t++;if(a<min||a>max)continue;i++;if(i>=o){if(pointPositionArray[a][r]!==0)continue;let e=a,t=r;if(pointPositionArray[a][r]===0){pointPositionArray[a][r]=currentPlayer}return{positionX:e,positionY:t}}}break;case"-":while(t<=boundaryNumMax){const l=r+t;t++;if(l<min||l>max)continue;i++;if(i>=o){if(pointPositionArray[n][l]!==0)continue;let e=n,t=l;if(pointPositionArray[n][l]===0){pointPositionArray[n][l]=currentPlayer}return{positionX:e,positionY:t}}}break;case"\\":while(t<=boundaryNumMax){const a=n+t;const l=r+t;t++;if(a<min||a>max)continue;if(l<min||l>max)continue;i++;if(i>=o){if(pointPositionArray[a][l]!==0)continue;let e=a,t=l;if(pointPositionArray[a][l]===0){pointPositionArray[a][l]=currentPlayer}return{positionX:e,positionY:t}}}break;case"/":while(t<=boundaryNumMax){const a=n+t;const l=r-t;t++;if(a<min||a>max)continue;if(l<min||l>max)continue;i++;if(i>=o){if(pointPositionArray[a][l]!==0)continue;let e=a,t=l;if(pointPositionArray[a][l]===0){pointPositionArray[a][l]=currentPlayer}return{positionX:e,positionY:t}}}break}}function gamesOverFunc(){gamesOver=true;app.showWinner()}initCheckerboard();